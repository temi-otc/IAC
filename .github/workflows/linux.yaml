name: CI
on:
 push:
  branches:
   - main


jobs:
  
   Terraform:
     defaults:
       run:
        working-directory: ./Terraform
     runs-on: ubuntu-latest

     env:
      CLOUD: "Azure"
      VM_PASSWORD: ${{ secrets.VM_PASSWORD}}
      VM_USERNAME: ${{ vars.VM_ADMIN  }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

     steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: login to azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: replcae token
        uses: cschleiden/replace-tokens@v1
        with:
        tokenPrefix: '__'
        tokenSuffix: '__'
        files: '["**/*.tf"]'
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
  
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terarform Apply
        id: Apply
        run: terraform apply -auto-approve 

   Ansible:
    needs: [terraform]
    defaults:
      run:
       working-directory: ./Ansible


    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Install SSH pass
        run: |
          sudo apt update -y
          sudo apt install sshpass -y
          sshpass -v

      - name: Run ansible-script
        run: |
          service ssh status
          ansible-playbook linux.yaml -i inventory



        



